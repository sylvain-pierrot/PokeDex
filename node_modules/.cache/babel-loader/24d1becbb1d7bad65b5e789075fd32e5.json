{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_PokemonCard = _resolveComponent(\"PokemonCard\");\n  return _openBlock(), _createElementBlock(\"ul\", null, [_createElementVNode(\"li\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.pokemons, (pokemon, index) => {\n    return _openBlock(), _createBlock(_component_PokemonCard, {\n      key: index,\n      pokemon: pokemon\n    }, null, 8 /* PROPS */, [\"pokemon\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"mappings":";;;uBACIA,oBAIK,aAHDC,oBAEK,gCADDD,oBAAoFE,6BAA5CC,aAAQ,GAA3BC,OAAO,EAAEC,KAAK;yBAAnCC,aAAoFC;MAAjCC,GAAG,EAAEH,KAAK;MAAGD,OAAO,EAAEA","names":["_createElementBlock","_createElementVNode","_Fragment","_ctx","pokemon","index","_createBlock","_component_PokemonCard","key"],"sourceRoot":"","sources":["/home/pierrots/polytech/WOA/js/lab4/pokedex/src/views/PokemonList.vue"],"sourcesContent":["<template>\n    <ul>\n        <li>\n            <PokemonCard v-for=\"(pokemon, index) in pokemons\" :key=\"index\" :pokemon=\"pokemon\" />\n        </li>\n    </ul>\n</template>\n\n<script>\nimport PokemonCard from '@/components/PokemonCard.vue'\nimport Pokedex from 'pokeapi-js-wrapper'\n\nexport default {\n    name: 'PokemonList',\n    components: {\n        PokemonCard\n    },\n    data() {\n        return {\n            pokemons: [],\n            apiURL: 'https://pokeapi.co/api/v2/pokemon'\n        }\n    },\n    methods: {\n\n        const P = new Pokedex.Pokedex()\n            P.getPokemonByName(\"eevee\").then(function(response) {\n                console.log(response)\n        })\n        fetchPokemon() {\n            fetch(this.apiURL)\n        .then((reponse) => {\n            if (!reponse.ok) {\n                throw new Error(`HTTP error: ${reponse.status}`)\n            }\n            return reponse.json()\n        })\n        .then((json) => {  \n            console.log(json.results)\n            for (const pokemon of json.results) {\n                this.pokemons.push(pokemon)\n            }\n        })\n        .catch((err) => {  console.error(`Fetch problem: ${err.message}`)})\n        }\n    },\n    created() {\n        this.fetchPokemon()\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}