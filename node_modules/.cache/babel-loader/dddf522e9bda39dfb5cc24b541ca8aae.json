{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"article\", null, [_createElementVNode(\"h1\", null, _toDisplayString($setup.name), 1 /* TEXT */), _createCommentVNode(\" <ul>\\n            <li v-for=\\\"(type, index) in types\\\" :key=\\\"index\\\">{{ type.type.name }}</li>\\n        </ul>\\n        <div :style=\\\"{ backgroundColor: color }\\\">\\n            <img :src=\\\"image\\\" :alt=\\\"name\\\">\\n        </div>\\n        <div>\\n            <div>\\n\\n            </div>\\n            <div>\\n\\n            </div>\\n        </div> \")]);\n}","map":{"version":3,"mappings":";;uBACIA,oBAgBU,kBAfNC,oBAAmB,6BAAZC,WAAI,kBACXC,6WAaU","names":["_createElementBlock","_createElementVNode","$setup","_createCommentVNode"],"sourceRoot":"","sources":["/home/pierrots/Polytech/WOA/js/lab4/pokedex/src/components/PokeDetail.vue"],"sourcesContent":["<template>\n    <article>\n        <h1>{{ name }}</h1>\n        <!-- <ul>\n            <li v-for=\"(type, index) in types\" :key=\"index\">{{ type.type.name }}</li>\n        </ul>\n        <div :style=\"{ backgroundColor: color }\">\n            <img :src=\"image\" :alt=\"name\">\n        </div>\n        <div>\n            <div>\n\n            </div>\n            <div>\n\n            </div>\n        </div> -->\n    </article>\n</template>\n\n<script setup>\n// import { useStore } from 'vuex'\nimport { computed, defineProps } from 'vue'\n\nconst props = defineProps({\n    pokemon: {\n        type: Object,\n        required: true\n    } \n})\nconst poke = await Promise.any(props.pokemon)\n// const store = useStore()\n\n// const color = computed(() => {  return store.state.colors[props.pokemon.types[0].type.name]})\nconst name = computed(() => {  return poke.name})\n// const types = computed(() => {  return props.pokemon.types})\n// const image = computed (() => {  return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/' + props.pokemon.id + '.svg'})\n// const id = computed (() => {  return props.pokemon.id})\n\n// const route = useRoute()\n// const id = route.params.id\n// const store = useStore()\n\n// store.dispatch('addCurrentPokemonById', id)\n\n// const pokemon = computed(() => {  return store.state.currentPokemon[0]})\n// console.log(pokemon)\n// const color = computed(() => {  return store.state.colors[pokemon.types[0].type.name]})\n// const name = computed(() => {  return pokemon.name})\n// const types = computed(() => {  return pokemon.types})\n// const image = computed (() => {  return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/' + id + '.svg'})\n\n\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}