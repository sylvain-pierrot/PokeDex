{"ast":null,"code":"import localForage from \"localforage\";\nimport endpoints from './endpoints.json';\nimport rootEndpoints from './rootEndpoints.json';\nimport { loadResource } from './getter.js';\nimport { installSW } from './installSW.js';\nimport { Config } from './config.js';\nlocalForage.config({\n  name: 'pokeapi-js-wrapper'\n});\nexport class Pokedex {\n  constructor(config) {\n    this.config = new Config(config);\n\n    // add to Pokedex.prototype all our endpoint functions\n    endpoints.forEach(endpoint => {\n      const endpointFullName = buildEndpointFullName(endpoint);\n      this[endpointFullName] = input => {\n        if (input) {\n          // if the user has submitted a Name or an ID, return the JSON promise\n          if (typeof input === 'number' || typeof input === 'string') {\n            return loadResource(this.config, `${this.config.versionPath}${endpoint[2].replace(':id', input)}`);\n          }\n\n          // if the user has submitted an Array\n          // return a new promise which will resolve when all loadResource calls are ended\n          else if (typeof input === 'object') {\n            return Promise.all(mapResources(this.config, endpoint, input));\n          }\n        }\n      };\n      this[buildEndpointName(endpoint)] = this[endpointFullName];\n    });\n    rootEndpoints.forEach(rootEndpoint => {\n      const rootEndpointFullName = buildRootEndpointFullName(rootEndpoint);\n      this[rootEndpointFullName] = config => {\n        var limit = this.config.limit;\n        var offset = this.config.offset;\n        if (config) {\n          if (config.hasOwnProperty('offset')) {\n            offset = config.offset;\n          }\n          if (config.hasOwnProperty('limit')) {\n            limit = config.limit;\n          }\n        }\n        return loadResource(this.config, `${this.config.versionPath}${rootEndpoint[1]}?limit=${limit}&offset=${offset}`);\n      };\n      this[rootEndpoint[0]] = this[rootEndpointFullName];\n    });\n    if (this.config.cacheImages) {\n      installSW();\n    }\n  }\n  getConfig() {\n    return this.config;\n  }\n  getCacheLength() {\n    return localForage.length();\n  }\n  clearCache() {\n    return localForage.clear();\n  }\n  resource(path) {\n    if (typeof path === 'string') {\n      return loadResource(this.config, path);\n    } else if (Array.isArray(path)) {\n      return Promise.all(path.map(p => loadResource(this.config, p)));\n    } else {\n      return 'String or Array is required';\n    }\n  }\n}\nfunction mapResources(config, endpoint, inputs) {\n  return inputs.map(input => {\n    return loadResource(config, `${config.versionPath}${endpoint[2].replace(':id', input)}`);\n  });\n}\nfunction buildEndpointFullName(endpoint) {\n  return `${endpoint[0]}By${capitalize(endpoint[1])}`;\n}\nfunction buildEndpointName(endpoint) {\n  return `${endpoint[0]}`;\n}\nfunction buildRootEndpointFullName(endpoint) {\n  return `${endpoint[0]}List`;\n}\nfunction capitalize([first, ...rest]) {\n  return first.toUpperCase() + rest.join('').toLowerCase();\n}","map":{"version":3,"names":["localForage","endpoints","rootEndpoints","loadResource","installSW","Config","config","name","Pokedex","constructor","forEach","endpoint","endpointFullName","buildEndpointFullName","input","versionPath","replace","Promise","all","mapResources","buildEndpointName","rootEndpoint","rootEndpointFullName","buildRootEndpointFullName","limit","offset","hasOwnProperty","cacheImages","getConfig","getCacheLength","length","clearCache","clear","resource","path","Array","isArray","map","p","inputs","capitalize","first","rest","toUpperCase","join","toLowerCase"],"sources":["/home/pierrots/polytech/WOA/js/lab4/pokedex/node_modules/pokeapi-js-wrapper/src/index.js"],"sourcesContent":["import localForage from \"localforage\"\n\nimport endpoints from './endpoints.json'\nimport rootEndpoints from './rootEndpoints.json'\nimport { loadResource } from './getter.js'\nimport { installSW } from './installSW.js'\nimport { Config } from './config.js'\n\nlocalForage.config({\n    name: 'pokeapi-js-wrapper'\n})\n\nexport class Pokedex {\n\n    constructor(config) {\n        this.config = new Config(config)\n\n        // add to Pokedex.prototype all our endpoint functions\n        endpoints.forEach(endpoint => {\n            const endpointFullName = buildEndpointFullName(endpoint)\n            this[endpointFullName] = input => { \n                if (input) {\n\n                    // if the user has submitted a Name or an ID, return the JSON promise\n                    if (typeof input === 'number' || typeof input === 'string') {\n                        return loadResource(this.config, `${this.config.versionPath}${endpoint[2].replace(':id', input)}`) \n                    }\n            \n                    // if the user has submitted an Array\n                    // return a new promise which will resolve when all loadResource calls are ended\n                    else if (typeof input === 'object') {\n                        return Promise.all(mapResources(this.config, endpoint, input))\n                    }\n                }\n            }\n            this[buildEndpointName(endpoint)] = this[endpointFullName]\n        })\n\n        rootEndpoints.forEach(rootEndpoint => {\n            const rootEndpointFullName = buildRootEndpointFullName(rootEndpoint)\n            this[rootEndpointFullName] = config => {\n                var limit = this.config.limit\n                var offset = this.config.offset\n                if (config) {\n                    if (config.hasOwnProperty('offset')) {\n                        offset = config.offset\n                    }\n                    if (config.hasOwnProperty('limit')) {\n                        limit = config.limit\n                    }\n                }\n                return loadResource(this.config, `${this.config.versionPath}${rootEndpoint[1]}?limit=${limit}&offset=${offset}`)\n            }\n            this[rootEndpoint[0]] = this[rootEndpointFullName]\n        })\n\n        if (this.config.cacheImages) {\n            installSW()\n        }\n    }\n\n    getConfig() {\n        return this.config\n    }\n\n    getCacheLength() {\n        return localForage.length()\n    }\n\n    clearCache() {\n        return localForage.clear()\n    }\n\n    resource(path) {\n        if (typeof path === 'string') {\n            return loadResource(this.config, path)\n        } else if (Array.isArray(path)) {\n            return Promise.all(path.map(p => loadResource(this.config, p)))\n        } else {\n            return 'String or Array is required'\n        }\n    }\n}\n\nfunction mapResources(config, endpoint, inputs) {\n    return inputs.map(input => {\n        return loadResource(config, `${config.versionPath}${endpoint[2].replace(':id', input)}`)\n    })\n}\n\nfunction buildEndpointFullName(endpoint) {\n    return `${endpoint[0]}By${capitalize(endpoint[1])}`\n}\n\nfunction buildEndpointName(endpoint) {\n    return `${endpoint[0]}`\n}\n\nfunction buildRootEndpointFullName(endpoint) {\n    return `${endpoint[0]}List`\n}\n\nfunction capitalize([first,...rest]) {\n    return first.toUpperCase() + rest.join('').toLowerCase()\n}\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,aAAa;AAErC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,aAAa,MAAM,sBAAsB;AAChD,SAASC,YAAY,QAAQ,aAAa;AAC1C,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,MAAM,QAAQ,aAAa;AAEpCL,WAAW,CAACM,MAAM,CAAC;EACfC,IAAI,EAAE;AACV,CAAC,CAAC;AAEF,OAAO,MAAMC,OAAO,CAAC;EAEjBC,WAAW,CAACH,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAG,IAAID,MAAM,CAACC,MAAM,CAAC;;IAEhC;IACAL,SAAS,CAACS,OAAO,CAACC,QAAQ,IAAI;MAC1B,MAAMC,gBAAgB,GAAGC,qBAAqB,CAACF,QAAQ,CAAC;MACxD,IAAI,CAACC,gBAAgB,CAAC,GAAGE,KAAK,IAAI;QAC9B,IAAIA,KAAK,EAAE;UAEP;UACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;YACxD,OAAOX,YAAY,CAAC,IAAI,CAACG,MAAM,EAAG,GAAE,IAAI,CAACA,MAAM,CAACS,WAAY,GAAEJ,QAAQ,CAAC,CAAC,CAAC,CAACK,OAAO,CAAC,KAAK,EAAEF,KAAK,CAAE,EAAC,CAAC;UACtG;;UAEA;UACA;UAAA,KACK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;YAChC,OAAOG,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC,IAAI,CAACb,MAAM,EAAEK,QAAQ,EAAEG,KAAK,CAAC,CAAC;UAClE;QACJ;MACJ,CAAC;MACD,IAAI,CAACM,iBAAiB,CAACT,QAAQ,CAAC,CAAC,GAAG,IAAI,CAACC,gBAAgB,CAAC;IAC9D,CAAC,CAAC;IAEFV,aAAa,CAACQ,OAAO,CAACW,YAAY,IAAI;MAClC,MAAMC,oBAAoB,GAAGC,yBAAyB,CAACF,YAAY,CAAC;MACpE,IAAI,CAACC,oBAAoB,CAAC,GAAGhB,MAAM,IAAI;QACnC,IAAIkB,KAAK,GAAG,IAAI,CAAClB,MAAM,CAACkB,KAAK;QAC7B,IAAIC,MAAM,GAAG,IAAI,CAACnB,MAAM,CAACmB,MAAM;QAC/B,IAAInB,MAAM,EAAE;UACR,IAAIA,MAAM,CAACoB,cAAc,CAAC,QAAQ,CAAC,EAAE;YACjCD,MAAM,GAAGnB,MAAM,CAACmB,MAAM;UAC1B;UACA,IAAInB,MAAM,CAACoB,cAAc,CAAC,OAAO,CAAC,EAAE;YAChCF,KAAK,GAAGlB,MAAM,CAACkB,KAAK;UACxB;QACJ;QACA,OAAOrB,YAAY,CAAC,IAAI,CAACG,MAAM,EAAG,GAAE,IAAI,CAACA,MAAM,CAACS,WAAY,GAAEM,YAAY,CAAC,CAAC,CAAE,UAASG,KAAM,WAAUC,MAAO,EAAC,CAAC;MACpH,CAAC;MACD,IAAI,CAACJ,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAACC,oBAAoB,CAAC;IACtD,CAAC,CAAC;IAEF,IAAI,IAAI,CAAChB,MAAM,CAACqB,WAAW,EAAE;MACzBvB,SAAS,EAAE;IACf;EACJ;EAEAwB,SAAS,GAAG;IACR,OAAO,IAAI,CAACtB,MAAM;EACtB;EAEAuB,cAAc,GAAG;IACb,OAAO7B,WAAW,CAAC8B,MAAM,EAAE;EAC/B;EAEAC,UAAU,GAAG;IACT,OAAO/B,WAAW,CAACgC,KAAK,EAAE;EAC9B;EAEAC,QAAQ,CAACC,IAAI,EAAE;IACX,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;MAC1B,OAAO/B,YAAY,CAAC,IAAI,CAACG,MAAM,EAAE4B,IAAI,CAAC;IAC1C,CAAC,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;MAC5B,OAAOjB,OAAO,CAACC,GAAG,CAACgB,IAAI,CAACG,GAAG,CAACC,CAAC,IAAInC,YAAY,CAAC,IAAI,CAACG,MAAM,EAAEgC,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC,MAAM;MACH,OAAO,6BAA6B;IACxC;EACJ;AACJ;AAEA,SAASnB,YAAY,CAACb,MAAM,EAAEK,QAAQ,EAAE4B,MAAM,EAAE;EAC5C,OAAOA,MAAM,CAACF,GAAG,CAACvB,KAAK,IAAI;IACvB,OAAOX,YAAY,CAACG,MAAM,EAAG,GAAEA,MAAM,CAACS,WAAY,GAAEJ,QAAQ,CAAC,CAAC,CAAC,CAACK,OAAO,CAAC,KAAK,EAAEF,KAAK,CAAE,EAAC,CAAC;EAC5F,CAAC,CAAC;AACN;AAEA,SAASD,qBAAqB,CAACF,QAAQ,EAAE;EACrC,OAAQ,GAAEA,QAAQ,CAAC,CAAC,CAAE,KAAI6B,UAAU,CAAC7B,QAAQ,CAAC,CAAC,CAAC,CAAE,EAAC;AACvD;AAEA,SAASS,iBAAiB,CAACT,QAAQ,EAAE;EACjC,OAAQ,GAAEA,QAAQ,CAAC,CAAC,CAAE,EAAC;AAC3B;AAEA,SAASY,yBAAyB,CAACZ,QAAQ,EAAE;EACzC,OAAQ,GAAEA,QAAQ,CAAC,CAAC,CAAE,MAAK;AAC/B;AAEA,SAAS6B,UAAU,CAAC,CAACC,KAAK,EAAC,GAAGC,IAAI,CAAC,EAAE;EACjC,OAAOD,KAAK,CAACE,WAAW,EAAE,GAAGD,IAAI,CAACE,IAAI,CAAC,EAAE,CAAC,CAACC,WAAW,EAAE;AAC5D"},"metadata":{},"sourceType":"module"}