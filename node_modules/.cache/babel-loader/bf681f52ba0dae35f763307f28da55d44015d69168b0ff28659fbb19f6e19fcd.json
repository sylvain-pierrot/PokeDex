{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, watch, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useRouter } from \"vue-router\";\nimport { computed } from \"@vue/reactivity\";\nexport default {\n  __name: 'PokeDetail',\n  props: {\n    pokemon: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n    const router = useRouter();\n    const store = useStore();\n    const varieteId = ref(\"\");\n    const id = computed(() => {\n      return props.pokemon.id;\n    });\n    const name = computed(() => {\n      return props.pokemon.name;\n    });\n    const types = computed(() => {\n      return props.pokemon.types;\n    });\n    const color = computed(() => {\n      return props.pokemon.color;\n    });\n    const image = computed(() => {\n      return props.pokemon.image;\n    });\n    const legendary = computed(() => {\n      return props.pokemon.legendary;\n    });\n    const description = computed(() => {\n      return props.pokemon.description;\n    });\n    const specifications = rcomputed(() => {\n      return props.pokemon.specifications;\n    });\n    const abilities = computed(() => {\n      return props.pokemon.abilities;\n    });\n    // const moves = ref(props.pokemon.moves);\n    const pokeEvolves = computed(async () => {\n      return await Promise.all(props.pokemon.evolutions.map(async poke => {\n        return {\n          poke: await store.dispatch(\"createPokemon\", {\n            name: poke.name,\n            minimal: true\n          }),\n          minLevel: poke.minLevel\n        };\n      }));\n    });\n    const pokeVarieties = computed(async () => {\n      return await Promise.all(props.pokemon.varieties.map(async varietie => {\n        return await store.dispatch(\"createPokemon\", {\n          name: varietie,\n          minimal: true\n        });\n      }));\n    });\n\n    // const id = ref(props.pokemon.id);\n    // const name = ref(props.pokemon.name);\n    // const types = ref(props.pokemon.types);\n    // const color = ref(props.pokemon.color);\n    // const image = ref(props.pokemon.image);\n    // const legendary = ref(props.pokemon.legendary);\n    // const description = ref(props.pokemon.description);\n    // const specifications = ref(props.pokemon.specifications);\n    // const abilities = ref(props.pokemon.abilities);\n    // // const moves = ref(props.pokemon.moves);\n    // const pokeEvolves = ref([]);\n    // const pokeVarieties = ref([]);\n\n    // watch(\n    //   () => props.pokemon,\n    //   async () => {\n    //     id.value = props.pokemon.id;\n    //     name.value = props.pokemon.name;\n    //     types.value = props.pokemon.types;\n    //     color.value = props.pokemon.color;\n    //     image.value = props.pokemon.image;\n    //     legendary.value = props.pokemon.legendary;\n    //     description.value = props.pokemon.description;\n    //     specifications.value = props.pokemon.specifications;\n    //     abilities.value = props.pokemon.abilities;\n    //     // moves.value = props.pokemon.moves;\n    //     pokeEvolves.value = await Promise.all(\n    //       props.pokemon.evolutions.map(async (poke) => {\n    //         return {\n    //           poke: await store.dispatch(\"createPokemon\", {\n    //             name: poke.name,\n    //             minimal: true,\n    //           }),\n    //           minLevel: poke.minLevel,\n    //         };\n    //       })\n    //     );\n    //     pokeVarieties.value = await Promise.all(\n    //       props.pokemon.varieties.map(async (varietie) => {\n    //         return await store.dispatch(\"createPokemon\", {\n    //           name: varietie,\n    //           minimal: true,\n    //         });\n    //       })\n    //     );\n    //   }\n    // );\n\n    function varietieChange() {\n      router.push({\n        name: \"Pokemon\",\n        params: {\n          id: varieteId.value\n        }\n      });\n    }\n    onMounted(async () => {\n      // pokeEvolves.value = await Promise.all(\n      //   props.pokemon.evolutions.map(async (poke) => {\n      //     return {\n      //       poke: await store.dispatch(\"createPokemon\", {\n      //         name: poke.name,\n      //         minimal: true,\n      //       }),\n      //       minLevel: poke.minLevel,\n      //     };\n      //   })\n      // );\n      // pokeVarieties.value = await Promise.all(\n      //   props.pokemon.varieties.map(async (varietie) => {\n      //     return await store.dispatch(\"createPokemon\", {\n      //       name: varietie,\n      //       minimal: true,\n      //     });\n      //   })\n      // );\n    });\n    const __returned__ = {\n      props,\n      router,\n      store,\n      varieteId,\n      id,\n      name,\n      types,\n      color,\n      image,\n      legendary,\n      description,\n      specifications,\n      abilities,\n      pokeEvolves,\n      pokeVarieties,\n      varietieChange,\n      ref,\n      watch,\n      onMounted,\n      useStore,\n      useRouter,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","watch","onMounted","useStore","useRouter","computed","router","store","varieteId","id","props","pokemon","name","types","color","image","legendary","description","specifications","rcomputed","abilities","pokeEvolves","Promise","all","evolutions","map","poke","dispatch","minimal","minLevel","pokeVarieties","varieties","varietie","varietieChange","push","params","value"],"sources":["/home/pierrots/Polytech/WOA/js/lab4/PokeDex/src/components/PokeDetail.vue"],"sourcesContent":["<template>\n  <article class=\"pokemon\">\n    <div class=\"pokemon-header\" :style=\"{ backgroundColor: color }\">\n      <select\n        v-model=\"varieteId\"\n        v-if=\"pokeVarieties.length > 1\"\n        name=\"varieties\"\n        @change=\"varietieChange\"\n        :style=\"{ backgroundColor: color }\"\n      >\n        <option value=\"\" disabled selected hidden>{{ name }}</option>\n        <option\n          v-for=\"varietie in pokeVarieties\"\n          :key=\"varietie.id\"\n          :value=\"varietie.id\"\n        >\n          {{ varietie.name }}\n        </option>\n      </select>\n      <h1 v-else>{{ name }}</h1>\n    </div>\n    <ul class=\"pokemon-types\">\n      <li v-for=\"(type, index) in types\" :key=\"index\">\n        <span\n          class=\"type\"\n          :style=\"{ backgroundColor: type.color }\"\n          v-if=\"type\"\n        ></span>\n        {{ \"Type \" + type.name }}\n      </li>\n    </ul>\n    <div class=\"pokemon-image\">\n      <div>\n        <img :src=\"image\" :alt=\"name\" :style=\"{ backgroundColor: color }\" />\n      </div>\n    </div>\n    <div class=\"pokemon-description\">\n      <div class=\"specifications\">\n        <div>\n          <h3 :style=\"{ backgroundColor: color }\">Région(s):</h3>\n          <p></p>\n          <h3 :style=\"{ backgroundColor: color }\">Taille:</h3>\n          <p>{{ specifications.height }} m</p>\n          <h3 :style=\"{ backgroundColor: color }\">Poids:</h3>\n          <p>{{ specifications.weight }} kg</p>\n          <h3 :style=\"{ backgroundColor: color }\">Catégorie:</h3>\n          <p></p>\n          <h3 :style=\"{ backgroundColor: color }\">Talent(s):</h3>\n          <p v-for=\"(ability, index) in abilities\" :key=\"index\">\n            {{ ability }}\n          </p>\n        </div>\n        <div>\n          <h3 :style=\"{ backgroundColor: color }\">Attaque(s):</h3>\n          <p class=\"attacks\">{{ moves }}</p>\n        </div>\n      </div>\n      <div class=\"infos\">\n        <p>{{ description }}</p>\n      </div>\n      <div class=\"legendary\" v-if=\"legendary\">\n        <h2>POKEMON LEGENDAIRE</h2>\n      </div>\n    </div>\n    <div class=\"pokemon-evolution\">\n      <h2 v-if=\"pokeEvolves.length > 1\">EVOLUTION</h2>\n      <ul class=\"evolutions\" v-if=\"pokeEvolves.length > 1\">\n        <li v-for=\"evo in pokeEvolves\" :key=\"evo.poke.id\">\n          <router-link\n            class=\"transparent\"\n            :to=\"{ name: 'Pokemon', params: { id: evo.poke.id } }\"\n          >\n            <img\n              :src=\"evo.poke.image\"\n              :alt=\"evo.poke.name\"\n              :style=\"{ backgroundColor: evo.poke.color }\"\n            />\n            <p>{{ evo.poke.name + \" #\" + evo.poke.id }}</p>\n          </router-link>\n          <span class=\"min-lvl\" v-if=\"evo.minLevel\">{{\n            \"lvl\" + evo.minLevel\n          }}</span>\n          <span class=\"min-lvl\" v-if=\"evo.minLevel === null\">{{ \"???\" }}</span>\n        </li>\n      </ul>\n      <h2 v-else>CE POKEMON N'EVOLUE PAS.</h2>\n    </div>\n  </article>\n</template>\n\n<script setup>\nimport { ref, watch, defineProps, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useRouter } from \"vue-router\";\nimport { computed } from \"@vue/reactivity\";\n\nconst props = defineProps({\n  pokemon: {\n    type: Object,\n    required: true,\n  },\n});\n\nconst router = useRouter();\nconst store = useStore();\nconst varieteId = ref(\"\");\n\nconst id = computed(() => {\n  return props.pokemon.id;\n});\nconst name = computed(() => {\n  return props.pokemon.name;\n});\nconst types = computed(() => {\n  return props.pokemon.types;\n});\nconst color = computed(() => {\n  return props.pokemon.color;\n});\nconst image = computed(() => {\n  return props.pokemon.image;\n});\nconst legendary = computed(() => {\n  return props.pokemon.legendary;\n});\nconst description = computed(() => {\n  return props.pokemon.description;\n});\nconst specifications = rcomputed(() => {\n  return props.pokemon.specifications;\n});\nconst abilities = computed(() => {\n  return props.pokemon.abilities;\n});\n// const moves = ref(props.pokemon.moves);\nconst pokeEvolves = computed(async () => {\n  return await Promise.all(\n    props.pokemon.evolutions.map(async (poke) => {\n      return {\n        poke: await store.dispatch(\"createPokemon\", {\n          name: poke.name,\n          minimal: true,\n        }),\n        minLevel: poke.minLevel,\n      };\n    })\n  );\n});\n\nconst pokeVarieties = computed(async () => {\n  return await Promise.all(\n    props.pokemon.varieties.map(async (varietie) => {\n      return await store.dispatch(\"createPokemon\", {\n        name: varietie,\n        minimal: true,\n      });\n    })\n  );\n});\n\n// const id = ref(props.pokemon.id);\n// const name = ref(props.pokemon.name);\n// const types = ref(props.pokemon.types);\n// const color = ref(props.pokemon.color);\n// const image = ref(props.pokemon.image);\n// const legendary = ref(props.pokemon.legendary);\n// const description = ref(props.pokemon.description);\n// const specifications = ref(props.pokemon.specifications);\n// const abilities = ref(props.pokemon.abilities);\n// // const moves = ref(props.pokemon.moves);\n// const pokeEvolves = ref([]);\n// const pokeVarieties = ref([]);\n\n// watch(\n//   () => props.pokemon,\n//   async () => {\n//     id.value = props.pokemon.id;\n//     name.value = props.pokemon.name;\n//     types.value = props.pokemon.types;\n//     color.value = props.pokemon.color;\n//     image.value = props.pokemon.image;\n//     legendary.value = props.pokemon.legendary;\n//     description.value = props.pokemon.description;\n//     specifications.value = props.pokemon.specifications;\n//     abilities.value = props.pokemon.abilities;\n//     // moves.value = props.pokemon.moves;\n//     pokeEvolves.value = await Promise.all(\n//       props.pokemon.evolutions.map(async (poke) => {\n//         return {\n//           poke: await store.dispatch(\"createPokemon\", {\n//             name: poke.name,\n//             minimal: true,\n//           }),\n//           minLevel: poke.minLevel,\n//         };\n//       })\n//     );\n//     pokeVarieties.value = await Promise.all(\n//       props.pokemon.varieties.map(async (varietie) => {\n//         return await store.dispatch(\"createPokemon\", {\n//           name: varietie,\n//           minimal: true,\n//         });\n//       })\n//     );\n//   }\n// );\n\nfunction varietieChange() {\n  router.push({ name: \"Pokemon\", params: { id: varieteId.value } });\n}\n\nonMounted(async () => {\n  // pokeEvolves.value = await Promise.all(\n  //   props.pokemon.evolutions.map(async (poke) => {\n  //     return {\n  //       poke: await store.dispatch(\"createPokemon\", {\n  //         name: poke.name,\n  //         minimal: true,\n  //       }),\n  //       minLevel: poke.minLevel,\n  //     };\n  //   })\n  // );\n  // pokeVarieties.value = await Promise.all(\n  //   props.pokemon.varieties.map(async (varietie) => {\n  //     return await store.dispatch(\"createPokemon\", {\n  //       name: varietie,\n  //       minimal: true,\n  //     });\n  //   })\n  // );\n});\n</script>\n\n<style scoped>\n.pokemon {\n  display: grid;\n  text-align: center;\n  margin-bottom: 5em;\n}\n.pokemon-header {\n  padding: 8px 0;\n  font-size: 3.5em;\n  text-transform: uppercase;\n  border-bottom: 6px solid #fff;\n  border-top: 6px solid #fff;\n  height: auto;\n  display: grid;\n  justify-content: center;\n  align-items: center;\n}\n.pokemon-header select {\n  font-size: 1em;\n  border: solid 1px #000;\n  text-transform: uppercase;\n  font-weight: 600;\n}\n.pokemon-types {\n  list-style: none;\n  margin-top: 4em;\n  margin-bottom: 2em;\n  display: flex;\n  justify-content: space-evenly;\n}\n.pokemon-types li {\n  position: relative;\n  padding: 3px 3em;\n  border-bottom: 3px solid #000;\n  font-weight: 600;\n}\n.pokemon-types li::after {\n  content: \"\";\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  left: 0;\n  bottom: 0;\n  background-color: #000;\n  transform: translate(-50%, 55%);\n}\n.pokemon-types li .type {\n  content: \"\";\n  position: absolute;\n  width: 4em;\n  height: 4em;\n  border-radius: 50%;\n  border: 3px solid #000;\n  right: 0;\n  bottom: 0;\n  transform: translate(50%, 15%);\n}\n.pokemon-image {\n  display: flex;\n  justify-content: center;\n}\n.pokemon-image div {\n  position: relative;\n  height: 25em;\n  width: 25em;\n}\n.pokemon-image div::before {\n  content: \"\";\n  position: absolute;\n  top: -8px;\n  bottom: -8px;\n  right: -8px;\n  left: -8px;\n  background-color: #fff;\n  mask: url(\"../assets/heptagone.png\");\n  mask-size: contain;\n  mask-repeat: no-repeat;\n  mask-position: center;\n}\n.pokemon-image div img {\n  mask: url(\"../assets/heptagone.png\");\n  mask-size: contain;\n  mask-repeat: no-repeat;\n  mask-position: center;\n  width: 25em;\n  height: 25em;\n  padding: 4em;\n}\n.pokemon-description {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.pokemon-description .specifications {\n  display: flex;\n}\n.pokemon-description .specifications div p {\n  font-weight: 600;\n}\n.pokemon-description .specifications div:nth-child(1) {\n  border-right: solid 2px #fff;\n  width: 50%;\n  padding-top: 2em;\n  padding-bottom: 4em;\n}\n.pokemon-description .specifications div:nth-child(2) {\n  border-left: solid 2px #fff;\n  width: 50%;\n  padding-top: 2em;\n  padding-bottom: 5em;\n}\n.attacks {\n  width: 30em;\n}\n.pokemon-description .infos {\n  position: relative;\n  width: fit-content;\n  margin-bottom: 5em;\n}\n.pokemon-description .infos p {\n  font-size: 0.8em;\n  line-height: 2em;\n  padding: 3em 5em;\n  width: 30em;\n  text-transform: uppercase;\n  background-color: #000;\n  color: #fff;\n  font-weight: 600;\n  border-radius: 0 4em 0 4em;\n  border: solid 4px #fff;\n}\n.pokemon-description .legendary {\n  margin-bottom: 3em;\n}\n.pokemon-description .legendary h2 {\n  padding: 10px 20px;\n  font-size: 2em;\n  text-transform: uppercase;\n  background-color: rgb(143, 25, 25);\n  color: #fff;\n}\n.pokemon-evolution h2 {\n  padding: 10px 0;\n  font-size: 2em;\n  text-transform: uppercase;\n  background-color: #fff;\n  color: #000;\n  width: 100%;\n}\n.evolutions {\n  position: relative;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 2em 0;\n}\n.evolutions::after {\n  content: \"\";\n  height: 10px;\n  position: absolute;\n  left: 0;\n  right: 0;\n  background-color: #fff;\n  top: 50%;\n  transform: translateY(-50%);\n  z-index: -1;\n}\n.evolutions li {\n  position: relative;\n  margin: 2em 5em;\n  white-space: nowrap;\n}\n.evolutions .min-lvl {\n  position: absolute;\n  top: 50%;\n  right: 100%;\n  transform: translateY(-50%);\n  padding: 5px;\n  color: #ff1a1a;\n  background-color: #000;\n  border: solid 2px #fff;\n  font-weight: 600;\n  font-size: 24px;\n  white-space: nowrap;\n}\n.evolutions li p {\n  position: absolute;\n  top: calc(102%);\n  left: 50%;\n  transform: translateX(-50%);\n  color: #fff;\n}\n.evolutions li img {\n  position: relative;\n  mask: url(\"../assets/octogone.png\");\n  mask-size: contain;\n  mask-repeat: no-repeat;\n  mask-position: center;\n  width: 12em;\n  height: 12em;\n  padding: 1.5em;\n}\n.evolutions li::before {\n  content: \"\";\n  position: absolute;\n  top: -5px;\n  bottom: -5px;\n  right: -5px;\n  left: -5px;\n  background-color: #fff;\n  mask: url(\"../assets/octogone.png\");\n  mask-size: contain;\n  mask-repeat: no-repeat;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}