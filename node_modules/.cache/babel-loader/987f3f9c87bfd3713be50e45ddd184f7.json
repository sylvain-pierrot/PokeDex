{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-158261fa\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"card-container\"\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nconst _hoisted_3 = {\n  class: \"types\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"li\", _hoisted_1, [_createElementVNode(\"a\", {\n    class: \"card\",\n    style: _normalizeStyle({\n      backgroundColor: $setup.color\n    })\n  }, [_createElementVNode(\"img\", {\n    src: $setup.image,\n    alt: $setup.name\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"div\", null, [_createElementVNode(\"h2\", null, _toDisplayString($setup.name), 1 /* TEXT */), _createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.types, (type, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(type.type.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"h4\", null, \"#\" + _toDisplayString($setup.id), 1 /* TEXT */)], 4 /* STYLE */)]);\n}","map":{"version":3,"mappings":";;;EACQA,KAAK,EAAC;AAAgB;;;EAKVA,KAAK,EAAC;AAAO;;uBAL7BC,oBAWK,MAXLC,UAWK,GAVDC,oBASI;IATDH,KAAK,EAAC,MAAM;IAAEI,KAAK;MAAAC,iBAAqBC;IAAK;MAC5CH,oBAA8B;IAAxBI,GAAG,EAAED,YAAK;IAAGE,GAAG,EAAEF;uCACxBH,oBAKM,cAJFA,oBAAmB,6BAAZG,WAAI,kBACXH,oBAEK,MAFLM,UAEK,sBADDR,oBAAyES,6BAA7CJ,YAAK,GAArBK,IAAI,EAAEC,KAAK;yBAAvBX,oBAAyE;MAArCY,GAAG,EAAED;IAAK,oBAAKD,IAAI,CAACA,IAAI,CAACG,IAAI;sCAGzEX,oBAAkB,YAAd,GAAC,oBAAGG,SAAE","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","style","backgroundColor","$setup","src","alt","_hoisted_3","_Fragment","type","index","key","name"],"sourceRoot":"","sources":["/home/pierrots/polytech/WOA/js/lab4/pokedex/src/components/PokemonCard.vue"],"sourcesContent":["<template>\n    <li class=\"card-container\">\n        <a class=\"card\" :style=\"{ backgroundColor: color }\">\n            <img :src=\"image\" :alt=\"name\">\n            <div>\n                <h2>{{ name }}</h2>\n                <ul class=\"types\">\n                    <li v-for=\"(type, index) in types\" :key=\"index\">{{ type.type.name }}</li>\n                </ul>\n            </div>\n            <h4>#{{ id }}</h4>\n        </a>\n    </li>\n</template>\n\n<script setup>\nimport { useStore } from 'vuex'\nimport { computed, defineProps } from 'vue'\n\nconst props = defineProps({\n    pokemon: {\n        type: Object,\n        required: true\n    } \n})\nconst store = useStore()\n\nconst color = computed(() => {  return store.state.colors[props.pokemon.types[0].type.name]})\nconst name = computed(() => {  return props.pokemon.name})\nconst types = computed(() => {  return props.pokemon.types})\nconst image = computed (() => {  return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/' + props.pokemon.id + '.svg'})\nconst id = computed (() => {  return props.pokemon.id})\n</script>\n\n<style scoped>\n.card-container {\n    position: relative;\n    margin: 0.8em;;\n}\n.card {\n    width: 400px;\n    height: 300px;\n    border-radius: 3em;\n    padding: 2em;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n}\n.card img {\n    height: 12em;\n    position: absolute;\n    bottom: 1em;\n    right: 1em;\n}\n.card h2 {\n    color: #FFF;\n    font-weight: 600;\n    margin-bottom: 15px;\n    margin-top: 20px;\n    font-size: 32px;\n}\n.card h2::first-letter {\n    text-transform: uppercase;\n}\n.types {\n    list-style: none;\n}\n.types > li {\n    text-align: center;\n    background: #FFFFFF82;\n    padding: 5px 20px;\n    border-radius: 1em;\n    color: #FFF;\n    margin-bottom: 8px;\n    width: fit-content;\n}\n.types > li::first-letter {\n    text-transform: uppercase;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}