{"ast":null,"code":"export default {\n  name: 'PokemonCard',\n  props: {\n    pokemonURL: {\n      type: String,\n      required: true\n    }\n  },\n  mounted: {\n    fetchCurrentPokemon() {\n      fetch(this.pokemon).then(reponse => {\n        if (!reponse.ok) {\n          throw new Error(`HTTP error: ${reponse.status}`);\n        }\n        return reponse.json();\n      }).then(json => {\n        console.log(json.results);\n        currentPokemon = json.results;\n      }).catch(err => {\n        console.error(`Fetch problem: ${err.message}`);\n      });\n    }\n  },\n  created() {\n    this.fetchCurrentPokemon();\n  },\n  computed: {\n    name() {\n      return this.currentPokemon.name;\n    },\n    types() {\n      return this.currentPokemon.types;\n    },\n    image() {\n      return this.currentPokemon.sprites['front_default'];\n    },\n    id() {\n      return this.currentPokemon.id;\n    }\n  }\n};","map":{"version":3,"mappings":"AAgBA,eAAe;EACXA,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACHC,UAAU,EAAE;MACRC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,mBAAmB,GAAG;MACdC,KAAK,CAAC,IAAI,CAACC,OAAO,EACrBC,IAAI,CAAEC,OAAO,IAAK;QACf,IAAI,CAACA,OAAO,CAACC,EAAE,EAAE;UACb,MAAM,IAAIC,KAAK,CAAE,eAAcF,OAAO,CAACG,MAAO,EAAC;QACnD;QACA,OAAOH,OAAO,CAACI,IAAI,EAAC;MACxB,CAAC,EACAL,IAAI,CAAEK,IAAI,IAAK;QACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,OAAO;QACxBC,cAAa,GAAIJ,IAAI,CAACG,OAAM;MAChC,CAAC,EACAE,KAAK,CAAEC,GAAG,IAAK;QACZL,OAAO,CAACM,KAAK,CAAE,kBAAiBD,GAAG,CAACE,OAAQ,EAAC;MACjD,CAAC;IACL;EACJ,CAAC;EACDC,OAAO,GAAG;IACN,IAAI,CAACjB,mBAAmB,EAAC;EAC7B,CAAC;EACDkB,QAAQ,EAAE;IACNzB,IAAI,GAAG;MACH,OAAO,IAAI,CAACmB,cAAc,CAACnB,IAAG;IAClC,CAAC;IACD0B,KAAK,GAAG;MACJ,OAAO,IAAI,CAACP,cAAc,CAACO,KAAI;IACnC,CAAC;IACDC,KAAK,GAAG;MACJ,OAAO,IAAI,CAACR,cAAc,CAACS,OAAO,CAAC,eAAe;IACtD,CAAC;IACDC,EAAE,GAAG;MACD,OAAO,IAAI,CAACV,cAAc,CAACU,EAAC;IAChC;EACJ;AACJ","names":["name","props","pokemonURL","type","String","required","mounted","fetchCurrentPokemon","fetch","pokemon","then","reponse","ok","Error","status","json","console","log","results","currentPokemon","catch","err","error","message","created","computed","types","image","sprites","id"],"sourceRoot":"","sources":["/home/pierrots/polytech/WOA/js/lab4/pokedex/src/components/PokemonCard.vue"],"sourcesContent":["<template>\n    <a class=\"pokemon-card\">\n        <div>\n            <h3>{{ pokemon.name }}</h3>\n            <ul>\n                <!-- <li v-for=\"(type, index) in types\" :key=\"index\">{{ type.name }}</li> -->\n            </ul>\n        </div>\n        <div>\n            <h4>{{ id }}</h4>\n            <img :src=\"image\" :alt=\"name\">\n        </div>\n    </a>\n</template>\n\n<script>\nexport default {\n    name: 'PokemonCard',\n    props: {\n        pokemonURL: {\n            type: String,\n            required: true\n        }    \n    },\n    mounted: {\n        fetchCurrentPokemon() {\n                fetch(this.pokemon)\n            .then((reponse) => {\n                if (!reponse.ok) {\n                    throw new Error(`HTTP error: ${reponse.status}`)\n                }\n                return reponse.json()\n            })\n            .then((json) => {  \n                console.log(json.results)\n                currentPokemon = json.results\n            })\n            .catch((err) => {  \n                console.error(`Fetch problem: ${err.message}`)\n            })\n        }\n    },\n    created() {\n        this.fetchCurrentPokemon()\n    },\n    computed: {\n        name() {\n            return this.currentPokemon.name\n        },\n        types() {\n            return this.currentPokemon.types\n        },\n        image() {\n            return this.currentPokemon.sprites['front_default']\n        },\n        id() {\n            return this.currentPokemon.id\n        }\n    }\n}\n</script>\n\n<style>\n.pokemon-card {\n    width: 200px;\n    height: 500px;\n    background-color: red;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}