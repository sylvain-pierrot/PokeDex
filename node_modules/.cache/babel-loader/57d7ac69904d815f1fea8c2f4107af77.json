{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = [\"src\", \"alt\"];\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Région(s):\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Taille:\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Poids:\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Catégorie:\", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Région(s):\", -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"article\", null, [_createElementVNode(\"h1\", null, _toDisplayString($setup.name), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.types, (type, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(type.type.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", {\n    style: _normalizeStyle({\n      backgroundColor: $setup.color\n    })\n  }, [_createElementVNode(\"img\", {\n    src: $setup.image,\n    alt: $setup.name\n  }, null, 8 /* PROPS */, _hoisted_1)], 4 /* STYLE */), _hoisted_2, _hoisted_3, _hoisted_4, _hoisted_5, _hoisted_6, _hoisted_7, _hoisted_8, _hoisted_9, _hoisted_10, _hoisted_11]);\n}","map":{"version":3,"mappings":";;gCASQA,oBAAmB,YAAf,YAAU;gCACdA,oBAAO;gCACPA,oBAAgB,YAAZ,SAAO;gCACXA,oBAAO;gCACPA,oBAAe,YAAX,QAAM;gCACVA,oBAAO;gCACPA,oBAAmB,YAAf,YAAU;gCACdA,oBAAO;iCACPA,oBAAmB,YAAf,YAAU;iCACdA,oBAAO;;;uBAjBXC,oBAkBU,kBAjBND,oBAAmB,6BAAZE,WAAI,kBACXF,oBAEK,gCADDC,oBAAyEE,6BAA7CD,YAAK,GAArBE,IAAI,EAAEC,KAAK;yBAAvBJ,oBAAyE;MAArCK,GAAG,EAAED;IAAK,oBAAKD,IAAI,CAACA,IAAI,CAACG,IAAI;oCAErEP,oBAEM;IAFAQ,KAAK;MAAAC,iBAAqBP;IAAK;MACjCF,oBAA8B;IAAxBU,GAAG,EAAER,YAAK;IAAGS,GAAG,EAAET;wDAE5BU,UAAmB,EACnBC,UAAO,EACPC,UAAgB,EAChBC,UAAO,EACPC,UAAe,EACfC,UAAO,EACPC,UAAmB,EACnBC,UAAO,EACPC,WAAmB,EACnBC,WAAO","names":["_createElementVNode","_createElementBlock","$setup","_Fragment","type","index","key","name","style","backgroundColor","src","alt","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11"],"sourceRoot":"","sources":["/home/pierrots/Polytech/WOA/js/lab4/pokedex/src/components/PokeDetail.vue"],"sourcesContent":["<template>\n    <article>\n        <h1>{{ name }}</h1>\n        <ul>\n            <li v-for=\"(type, index) in types\" :key=\"index\">{{ type.type.name }}</li>\n        </ul>\n        <div :style=\"{ backgroundColor: color }\">\n            <img :src=\"image\" :alt=\"name\">\n        </div>\n        <h3>Région(s):</h3>\n        <p></p>\n        <h3>Taille:</h3>\n        <p></p>\n        <h3>Poids:</h3>\n        <p></p>\n        <h3>Catégorie:</h3>\n        <p></p>\n        <h3>Région(s):</h3>\n        <p></p>\n    </article>\n</template>\n\n<script setup>\nimport { useStore } from 'vuex'\nimport { computed, defineProps } from 'vue'\n\nconst props = defineProps({\n    pokemon: {\n        type: Object,\n        required: true\n    } \n})\n\nconst store = useStore()\n\nconst color = computed(() => {  return store.state.colors[props.pokemon.types[0].type.name]})\nconst name = computed(() => {  return props.pokemon.name})\nconst types = computed(() => {  return props.pokemon.types})\nconst image = computed (() => {  return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/' + props.pokemon.id + '.svg'})\n// const id = computed (() => {  return props.pokemon.id})\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}