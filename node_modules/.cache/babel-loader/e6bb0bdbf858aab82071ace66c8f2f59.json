{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-158261fa\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"card-container\"\n};\nconst _hoisted_2 = {\n  class: \"infos\"\n};\nconst _hoisted_3 = {\n  class: \"types\"\n};\nconst _hoisted_4 = [\"src\", \"alt\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"li\", _hoisted_1, [_createElementVNode(\"a\", {\n    class: \"card\",\n    style: _normalizeStyle({\n      backgroundColor: $setup.color\n    })\n  }, [_createElementVNode(\"article\", _hoisted_2, [_createElementVNode(\"h3\", null, _toDisplayString($setup.name), 1 /* TEXT */), _createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.types, (type, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(type.type.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", null, [_createElementVNode(\"h4\", null, _toDisplayString($setup.id), 1 /* TEXT */), _createElementVNode(\"img\", {\n    src: $setup.image,\n    alt: $setup.name\n  }, null, 8 /* PROPS */, _hoisted_4)])], 4 /* STYLE */)]);\n}","map":{"version":3,"mappings":";;;EACQA,KAAK,EAAC;AAAgB;;EAGTA,KAAK,EAAC;AAAO;;EAEdA,KAAK,EAAC;AAAO;;;uBAL7BC,oBAeK,MAfLC,UAeK,GAdDC,oBAaI;IAbDH,KAAK,EAAC,MAAM;IAAEI,KAAK;MAAAC,iBAAqBC;IAAK;MAE5CH,oBAKU,WALVI,UAKU,GAJNJ,oBAAmB,6BAAZG,WAAI,kBACXH,oBAEK,MAFLK,UAEK,sBADDP,oBAAyEQ,6BAA7CH,YAAK,GAArBI,IAAI,EAAEC,KAAK;yBAAvBV,oBAAyE;MAArCW,GAAG,EAAED;IAAK,oBAAKD,IAAI,CAACA,IAAI,CAACG,IAAI;sCAIzEV,oBAGM,cAFFA,oBAAiB,6BAAVG,SAAE,kBACTH,oBAA8B;IAAxBW,GAAG,EAAER,YAAK;IAAGS,GAAG,EAAET","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","style","backgroundColor","$setup","_hoisted_2","_hoisted_3","_Fragment","type","index","key","name","src","alt"],"sourceRoot":"","sources":["/home/pierrots/polytech/WOA/js/lab4/pokedex/src/components/PokemonCard.vue"],"sourcesContent":["<template>\n    <li class=\"card-container\">\n        <a class=\"card\" :style=\"{ backgroundColor: color }\">\n\n            <article class=\"infos\">\n                <h3>{{ name }}</h3>\n                <ul class=\"types\">\n                    <li v-for=\"(type, index) in types\" :key=\"index\">{{ type.type.name }}</li>\n                </ul>\n            </article>\n                \n            <div>\n                <h4>{{ id }}</h4>\n                <img :src=\"image\" :alt=\"name\">\n            </div>\n        </a>\n    </li>\n</template>\n\n<script setup>\nimport { useStore } from 'vuex'\nimport { computed, defineProps } from 'vue'\n\nconst props = defineProps({\n    pokemon: {\n        type: Object,\n        required: true\n    } \n})\nconst store = useStore()\n\nconst color = computed(() => {  return store.state.colors[props.pokemon.types[0].type.name]})\nconst name = computed(() => {  return props.pokemon.name})\nconst types = computed(() => {  return props.pokemon.types})\nconst image = computed (() => {  return props.pokemon.sprites['front_default']})\nconst id = computed (() => {  return props.pokemon.id})\n</script>\n\n<style scoped>\n.card-container {\n    margin: 0.8em;;\n}\n.card {\n    width: 400px;\n    height: 325px;\n    border-radius: 3em;\n    padding: 2em;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n}\n.card > div:nth-child(2) {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: flex-end;\n}\n.infos h3 {\n    color: #FFF;\n}\n.infos h3::first-letter {\n    text-transform: uppercase;\n}\n.types {\n    list-style: none;\n}\n.types > li {\n    text-align: center;\n    background: #FFFFFF82;\n    padding: 5px 20px;\n    border-radius: 1em;\n    color: #FFF;\n    margin: 5px 0;\n    width: fit-content;\n}\n.types > li::first-letter {\n    text-transform: uppercase;\n}\n\nimg {\n    object-fit: contain;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}