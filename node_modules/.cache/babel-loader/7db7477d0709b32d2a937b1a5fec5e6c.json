{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PokemonCard = _resolveComponent(\"PokemonCard\");\n  return _openBlock(), _createElementBlock(\"ul\", null, [_createElementVNode(\"li\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.pokemons, (pokemon, index) => {\n    return _openBlock(), _createBlock(_component_PokemonCard, {\n      key: index,\n      pokemon: pokemon\n    }, null, 8 /* PROPS */, [\"pokemon\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"mappings":";;;uBACIA,oBAIK,aAHDC,oBAEK,gCADDD,oBAAoFE,6BAA5CC,cAAQ,GAA3BC,OAAO,EAAEC,KAAK;yBAAnCC,aAAoFC;MAAjCC,GAAG,EAAEH,KAAK;MAAGD,OAAO,EAAEA","names":["_createElementBlock","_createElementVNode","_Fragment","$data","pokemon","index","_createBlock","_component_PokemonCard","key"],"sourceRoot":"","sources":["/home/pierrots/polytech/WOA/js/lab4/pokedex/src/views/PokemonList.vue"],"sourcesContent":["<template>\n    <ul>\n        <li>\n            <PokemonCard v-for=\"(pokemon, index) in pokemons\" :key=\"index\" :pokemon=\"pokemon\" />\n        </li>\n    </ul>\n</template>\n\n<script>\nimport PokemonCard from '../components/PokemonCard.vue'\n\nexport default {\n    name: 'PokemonList',\n    components: {\n        PokemonCard\n    },\n    data() {\n        return {\n            pokemons: []\n        }\n    },\n    methods: {\n        fetchPokemons() {\n            const Pokedex = require(\"pokeapi-js-wrapper\")\n            const P = new Pokedex.Pokedex()\n            const interval = {\n                offset: 0,\n                limit: 10,\n            }\n            P.getPokemonsList(interval).then(function(response) {\n                response.results.forEach(pokemon => {\n                    P.getPokemonByName(pokemon.name).then(function(pokemonDetail) {\n                        console.log(pokemonDetail)\n                        this.pokemons.push(pokemonDetail)\n                    })\n                    \n                });\n            })\n            console.log(`LIST POKEMONS ${this.pokemons}`)\n            // fetch(this.apiURL)\n            // .then((reponse) => {\n            //     if (!reponse.ok) {\n            //         throw new Error(`HTTP error: ${reponse.status}`)\n            //     }\n            //     return reponse.json()\n            // })\n            // .then((json) => {  \n            //     console.log(json.results)\n            //     for (const pokemon of json.results) {\n            //         this.pokemons.push(pokemon)\n            //     }\n            // })\n            // .catch((err) => {  console.error(`Fetch problem: ${err.message}`)})\n        }\n    },\n    created() {\n        this.fetchPokemons()\n    }\n}\n</script>\n\n<style>\n\n</style> "]},"metadata":{},"sourceType":"module"}