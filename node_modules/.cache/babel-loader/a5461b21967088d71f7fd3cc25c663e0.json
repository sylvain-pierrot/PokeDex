{"ast":null,"code":"import { useStore } from 'vuex';\nimport { computed } from 'vue';\nexport default {\n  __name: 'PokemonCard',\n  props: {\n    pokemon: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n    const store = useStore();\n    const color = computed(() => {\n      return store.state.colors[props.pokemon.types[0].type.name];\n    });\n    const name = computed(() => {\n      return props.pokemon.name;\n    });\n    const types = computed(() => {\n      return props.pokemon.types;\n    });\n    const image = computed(() => {\n      return props.pokemon.sprites['front_default'];\n    });\n    const id = computed(() => {\n      return props.pokemon.id;\n    });\n    const __returned__ = {\n      props,\n      store,\n      color,\n      name,\n      types,\n      image,\n      id,\n      useStore,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAoBA,SAASA,QAAQ,QAAQ,MAAM;AAC/B,SAASC,QAAqB,QAAQ,KAAK;;;;;;;;;;;;;;IAQ3C,MAAMC,KAAK,GAAGF,QAAQ,EAAE;IAExB,MAAMG,KAAK,GAAGF,QAAQ,CAAC,MAAM;MAAG,OAAOC,KAAK,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAAC;IAAA,CAAC,CAAC;IAC7F,MAAMA,IAAI,GAAGT,QAAQ,CAAC,MAAM;MAAG,OAAOK,KAAK,CAACC,OAAO,CAACG,IAAI;IAAA,CAAC,CAAC;IAC1D,MAAMF,KAAK,GAAGP,QAAQ,CAAC,MAAM;MAAG,OAAOK,KAAK,CAACC,OAAO,CAACC,KAAK;IAAA,CAAC,CAAC;IAC5D,MAAMG,KAAK,GAAGV,QAAQ,CAAE,MAAM;MAAG,OAAOK,KAAK,CAACC,OAAO,CAACK,OAAO,CAAC,eAAe,CAAC;IAAA,CAAC,CAAC;IAChF,MAAMC,EAAE,GAAGZ,QAAQ,CAAE,MAAM;MAAG,OAAOK,KAAK,CAACC,OAAO,CAACM,EAAE;IAAA,CAAC,CAAC","names":["useStore","computed","store","color","state","colors","props","pokemon","types","type","name","image","sprites","id"],"sources":["/home/pierrots/polytech/WOA/js/lab4/pokedex/src/components/PokemonCard.vue"],"sourcesContent":["<template>\n    <li class=\"card-container\">\n        <a class=\"card\" :style=\"{ backgroundColor: color }\">\n\n            <article>\n                <h3>{{ name }}</h3>\n                <ul>\n                    <li v-for=\"(type, index) in types\" :key=\"index\">{{ type.type.name }}</li>\n                </ul>\n            </article>\n                \n            <div>\n                <h4>{{ id }}</h4>\n                <img :src=\"image\" :alt=\"name\">\n            </div>\n        </a>\n    </li>\n</template>\n\n<script setup>\nimport { useStore } from 'vuex'\nimport { computed, defineProps } from 'vue'\n\nconst props = defineProps({\n    pokemon: {\n        type: Object,\n        required: true\n    } \n})\nconst store = useStore()\n\nconst color = computed(() => {  return store.state.colors[props.pokemon.types[0].type.name]})\nconst name = computed(() => {  return props.pokemon.name})\nconst types = computed(() => {  return props.pokemon.types})\nconst image = computed (() => {  return props.pokemon.sprites['front_default']})\nconst id = computed (() => {  return props.pokemon.id})\n</script>\n\n<style scoped>\n.card-container {\n    margin: 3em 0;\n}\n.card {\n    width: 400px;\n    height: 325px;\n    border-radius: 3em;\n    padding: 2em;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n}\n.card > div:nth-child(2) {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: flex-end;\n}\nimg {\n    object-fit: contain;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}