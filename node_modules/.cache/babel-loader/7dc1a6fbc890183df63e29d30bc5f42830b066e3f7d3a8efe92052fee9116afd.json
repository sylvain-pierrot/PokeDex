{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/right-arrow.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-1706f474\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"tree\"\n};\nconst _hoisted_2 = {\n  class: \"evolution\"\n};\nconst _hoisted_3 = [\"src\", \"alt\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"min-lvl\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"min-lvl\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"arrow\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"down-arrow\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_8 = [_hoisted_7];\nconst _hoisted_9 = {\n  key: 1,\n  class: \"children\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_TreeEvolutions = _resolveComponent(\"TreeEvolutions\", true);\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"figure\", _hoisted_2, [_createVNode(_component_router_link, {\n    class: \"transparent\",\n    to: {\n      name: 'Pokemon',\n      params: {\n        id: $setup.poke.id\n      }\n    }\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"img\", {\n      src: $setup.poke.image,\n      alt: $setup.poke.name,\n      style: _normalizeStyle({\n        backgroundColor: $setup.poke.color\n      })\n    }, null, 12 /* STYLE, PROPS */, _hoisted_3), _createElementVNode(\"p\", null, _toDisplayString($setup.poke.name + \" #\" + $setup.poke.id), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"]), $setup.minLevel ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString(\"lvl\" + $setup.minLevel), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.minLevel === null ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString(\"???\"))) : _createCommentVNode(\"v-if\", true)]), $setup.hasChildren ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _hoisted_8)) : _createCommentVNode(\"v-if\", true), $setup.hasChildren ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.evolves_to, (evo, index) => {\n    return _openBlock(), _createBlock(_component_TreeEvolutions, {\n      key: index,\n      evolutions: evo\n    }, null, 8 /* PROPS */, [\"evolutions\"]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";OAmBWA,UAA+B;;;EAlBnCC,KAAK,EAAC;AAAM;;EACPA,KAAK,EAAC;AAAW;;;;EAYjBA,KAAK,EAAC;;;;EACNA,KAAK,EAAC;;;;EAGUA,KAAK,EAAC;;gEAC5BC,oBAAwD;EAAnDC,GAA+B,EAA/BH,UAA+B;EAACI,GAAG,EAAC;;oBAAzCC,UAAwD;;;EAGrDJ,KAAK,EAAC;;;;;uBArBbK,oBA4BM,OA5BNC,UA4BM,GA3BJL,oBAcS,UAdTM,UAcS,GAbPC,aAUcC;IATZT,KAAK,EAAC,aAAa;IAClBU,EAAE;MAAAC;MAAAC;QAAAC,IAAmCC,WAAI,CAACD;MAAE;IAAA;;sBAE7C,MAIE,CAJFZ,oBAIE;MAHCC,GAAG,EAAEY,WAAI,CAACC,KAAK;MACfZ,GAAG,EAAEW,WAAI,CAACH,IAAI;MACdK,KAAK;QAAAC,iBAAqBH,WAAI,CAACI;MAAK;iDAEvCjB,oBAAuC,4BAAjCa,WAAI,CAACH,IAAI,UAAUG,WAAI,CAACD,EAAE;;;6BAENC,eAAQ,kBAApCT,oBAAmE,QAAnEc,UAAmE,2BAAlBL,eAAQ,uDAC7BA,eAAQ,2BAApCT,oBAAiE,QAAjEe,UAAiE,mBAAf,KAAK,2CAG9CN,kBAAW,kBAAtBT,oBAEM,OAFNgB,UAEM,oDAEsBP,kBAAW,kBAAvCT,oBAMM,OANNiB,UAMM,sBALJjB,oBAIkBkB,6BAHOT,iBAAU,GAAzBU,GAAG,EAAEC,KAAK;yBADpBC,aAIkBC;MAFfC,GAAG,EAAEH,KAAK;MACVI,UAAU,EAAEL","names":["_imports_0","class","_createElementVNode","src","alt","_hoisted_7","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_router_link","to","name","params","id","$setup","image","style","backgroundColor","color","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_9","_Fragment","evo","index","_createBlock","_component_TreeEvolutions","key","evolutions"],"sourceRoot":"","sources":["/home/pierrots/Polytech/WOA/js/lab4/PokeDex/src/components/TreeEvolutions.vue"],"sourcesContent":["<template>\n  <div class=\"tree\">\n    <figure class=\"evolution\">\n      <router-link\n        class=\"transparent\"\n        :to=\"{ name: 'Pokemon', params: { id: poke.id } }\"\n      >\n        <img\n          :src=\"poke.image\"\n          :alt=\"poke.name\"\n          :style=\"{ backgroundColor: poke.color }\"\n        />\n        <p>{{ poke.name + \" #\" + poke.id }}</p>\n      </router-link>\n      <span class=\"min-lvl\" v-if=\"minLevel\">{{ \"lvl\" + minLevel }}</span>\n      <span class=\"min-lvl\" v-if=\"minLevel === null\">{{ \"???\" }}</span>\n    </figure>\n\n    <div v-if=\"hasChildren\" class=\"arrow\">\n      <img src=\"../assets/right-arrow.png\" alt=\"down-arrow\" />\n    </div>\n\n    <div class=\"children\" v-if=\"hasChildren\">\n      <TreeEvolutions\n        v-for=\"(evo, index) in evolves_to\"\n        :key=\"index\"\n        :evolutions=\"evo\"\n      ></TreeEvolutions>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, defineProps, ref } from \"vue\";\n\nconst props = defineProps({\n  evolutions: {\n    type: Array,\n  },\n});\n\nconst hasChildren = computed(() => props.evolutions.length > 1);\n\nconst poke = ref(props.evolutions[0].poke);\nconst minLevel = ref(props.evolutions[0].minLevel);\nconst evolves_to = ref(props.evolutions[1]);\n</script>\n\n<style scoped>\n.tree {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n.children {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n.arrow img {\n  width: 5em;\n  margin: 1em;\n}\n.evolution {\n  position: relative;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.evolution a {\n  position: relative;\n  margin: 2em;\n  white-space: nowrap;\n}\n.evolution .min-lvl {\n  position: absolute;\n  top: 50%;\n  right: 100%;\n  transform: translateY(-50%);\n  padding: 5px;\n  color: #ff1a1a;\n  background-color: #000;\n  border: solid 2px #fff;\n  font-weight: 600;\n  font-size: 24px;\n  white-space: nowrap;\n}\n.evolution a p {\n  position: absolute;\n  top: calc(102%);\n  left: 50%;\n  transform: translateX(-50%);\n  color: #fff;\n}\n.evolution a img {\n  position: relative;\n  mask: url(\"../assets/octogone.png\");\n  mask-size: contain;\n  mask-repeat: no-repeat;\n  mask-position: center;\n  width: 12em;\n  height: 12em;\n  padding: 1.5em;\n}\n.evolution a::before {\n  content: \"\";\n  position: absolute;\n  top: -5px;\n  bottom: -5px;\n  right: -5px;\n  left: -5px;\n  background-color: #fff;\n  mask: url(\"../assets/octogone.png\");\n  mask-size: contain;\n  mask-repeat: no-repeat;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}